version: "3.4"
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-proxy/certs:/etc/nginx/certs/:ro
      - ./nginx-proxy/vhost:/etc/nginx/vhost.d/
      - ./nginx-proxy/html:/usr/share/nginx/html/
      - /var/run/docker.sock:/tmp/docker.sock:ro

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: acme-companion
    restart: unless-stopped
    volumes:
      - ./nginx-proxy/html:/usr/share/nginx/html/
      - ./nginx-proxy/vhost:/etc/nginx/vhost.d/
      - ./nginx-proxy/certs:/etc/nginx/certs/:rw
      - ./nginx-proxy/acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - DEFAULT_EMAIL=admin@hahn-webdesign.de
      - NGINX_PROXY_CONTAINER=nginx-proxy
  web:
    build:
      context: ./
      dockerfile: Dockerfile
      target: web
    container_name: com_web
    ports:
      - "4000:4000"
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST_FRONT}
      LETSENCRYPT_HOST: ${VIRTUAL_HOST_FRONT}
  api:
    build:
      context: ./
      dockerfile: Dockerfile
      target: api
    container_name: com_api
    ports:
      - "4200:4200"
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST_API}
      LETSENCRYPT_HOST: ${VIRTUAL_HOST_API}
  db:
    image: postgres
    restart: always
    container_name: com_db
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
  adminer:
    image: adminer
    container_name: com_adminer
    restart: always
    ports:
      - '8080:8080'
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST_ADMINER}
      LETSENCRYPT_HOST: ${VIRTUAL_HOST_ADMINER}
volumes:
  postgres:
